#version: '3.7'
verion: '3'

services:
  react:
    container_name: octo-cntr
    image: octo-img
    build:
      context: .
      dockerfile: Dockerfile
#    volumes:
#      - '.:/app'
#      - '/app/node_modules'
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    #      - COMPOSE_CONVERT_WINDOWS_PATHS=1
#    tty: true
    restart: unless-stopped
    networks:
      - app-network

  webserver:
    image: nginx:mainline-apline
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/lets
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - react
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email abizerjafferjee@gmail.com --agree-tos --no-eff-email --staging -d octoanalytics.io -d www.octoanalytics.io

  volumes:
    certbot-etc:
    certbot-var:
    web-root:
      driver: local
      driver-opts:
        type: none
        device: /home/deploy/octo-analytics/octo-analytics-frontend/build/
        o: bind

  networks:
    app-network:
      driver: bridge